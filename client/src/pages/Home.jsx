import React,{useState,useEffect} from 'react'
import {Card,FormField,Loading} from '../components'
// import { useNavigate } from 'react-router-dom'

const Home = () => {
  // const navigate=useNavigate();
  const[loading,setLoading]=useState(false);
  const [allPost,setallPost]=useState([]);
  const [searchText,setsearchText]=useState("");
  const [searchedResult,setSearchedResult]=useState([]);
  const [searchTimeout,setSearchTimeout]=useState(null);

  useEffect(()=>{
    const fetchPost=async()=>{
      setLoading(true);
      try {
        const response=await fetch("http://localhost:2000/api/v1/post",{
          method:'GET',
          headers:{
            'Content-Type':'application/json',
          },
        })
  
        // console.log(response);
  
        if(response.ok){
          const result=await response.json();
          // console.log(result);
          setallPost(result.data.reverse());
          // console.log("inside fn->",allPost);
        }
      } catch (error) {
        // alert(error);
        console.log(error);
      }finally{
        setLoading(false);
      }
    }
    fetchPost();
    // navigate(0);
  },[])

  const RenderCards=({data,title})=>{
      if(data?.length>0){
        return  data.map((post)=>{
          return <Card key={post._id} {...post}/>
        })
      }else{
        return (
          <h2 className="mt-10 font-bold text-[#6449ff] text-xl text-uppercase">{title}</h2>
        )
      }
  }

  const handleSearchChange=(e)=>{
    clearTimeout(searchTimeout)
    setsearchText(e.target.value);
  
    setSearchTimeout(
      setTimeout(()=>{
        const searchResult=allPost.filter((post)=>
           post.name.toLowerCase().includes(searchText.toLowerCase()) || post.prompt.toLowerCase().includes(searchText.toLowerCase())
        )
 
        setSearchedResult(searchResult);
     },500)
    )
  }

  return (
    <>
      <section className="max-w-7xl mx-auto">
         <div>
            <h1 className="font-extrabold text-[#222328] text-[32px] ">The Community Showcase</h1>
            <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Browse through a collection of immaginative and visually stunning images generated by DALL-E</p>
         </div>

         <div className="mt-16">
           <FormField
             LabelName="Search Post"
             type="text"
             name="text"
             placeholder="Search posts"
             value={searchText}
             handleChange={handleSearchChange}
           />
         </div>

         <div className="mt-8 flex justify-center">
          {
            loading?<Loading/>:(
              <>
                {
                  searchText && (
                     <h2 className="font-medium text-[#666e75]">Showing Results For <span className="text-[#222328]">{searchText}</span></h2>
                  )
                }

                <div className="grid lg:grid-col-4 sm:grid-col-3 xs:grid-col-2 grid-col-1 gap-3">
                   {searchText ? (
                     <RenderCards data={searchedResult} title="No Search Result Found"/>
                   ):(
                    <RenderCards data={allPost} title="No Post Found"/>
                   )}

                  {/* {console.log("outside fn->",allPost)} */}
                </div>


              </>
            )
          }
         </div>
      </section>
    </>
  )
}

export default Home
